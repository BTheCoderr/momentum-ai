import { BarChart, Bar, XAxis, YAxis, CartesianGrid, ResponsiveContainer, LineChart, Line } from 'recharts';
import { TrendingUp, Target, Brain, AlertTriangle } from 'lucide-react';

interface Goal {
  id: string;
  title: string;
  description: string;
  progress: number;
  emotionalContext: string;
  deadline: string;
  status: 'on-track' | 'at-risk' | 'completed';
}

interface ProgressDashboardProps {
  goals: Goal[];
}

export default function ProgressDashboard({ goals }: ProgressDashboardProps) {
  // Mock data for charts - in real app this would come from historical data
  const weeklyProgress = [
    { week: 'Week 1', progress: 20, motivation: 85 },
    { week: 'Week 2', progress: 35, motivation: 78 },
    { week: 'Week 3', progress: 45, motivation: 82 },
    { week: 'Week 4', progress: 55, motivation: 88 },
  ];

  const goalProgressData = goals.map(goal => ({
    name: goal.title.split(' ').slice(0, 2).join(' '),
    progress: goal.progress,
    status: goal.status
  }));

  // AI Insights - would be generated by actual AI
  const aiInsights = [
    {
      type: 'warning',
      title: 'Motivation Dip Detected',
      message: 'Your fitness goal shows 20% less activity this week. Consider scheduling a workout buddy session.',
      action: 'Schedule Intervention'
    },
    {
      type: 'success', 
      title: 'Strong Momentum',
      message: 'Your SaaS project is ahead of schedule! This aligns with your pattern of weekend productivity.',
      action: 'Keep Going'
    },
    {
      type: 'insight',
      title: 'Pattern Recognition',
      message: 'You tend to be most productive on Tuesday mornings. Consider scheduling important tasks then.',
      action: 'Optimize Schedule'
    }
  ];

  return (
    <div className="space-y-8">
      {/* Overview Cards */}
      <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6">
        <div className="bg-white rounded-xl p-6 shadow-lg border border-gray-100">
          <div className="flex items-center justify-between mb-4">
            <div className="w-12 h-12 bg-blue-100 rounded-lg flex items-center justify-center">
              <Target className="w-6 h-6 text-blue-600" />
            </div>
            <span className="text-2xl font-bold text-blue-600">{goals.length}</span>
          </div>
          <h3 className="font-semibold text-gray-900 mb-1">Active Goals</h3>
          <p className="text-gray-600 text-sm">Currently tracking</p>
        </div>

        <div className="bg-white rounded-xl p-6 shadow-lg border border-gray-100">
          <div className="flex items-center justify-between mb-4">
            <div className="w-12 h-12 bg-green-100 rounded-lg flex items-center justify-center">
              <TrendingUp className="w-6 h-6 text-green-600" />
            </div>
            <span className="text-2xl font-bold text-green-600">
              {Math.round(goals.reduce((acc, goal) => acc + goal.progress, 0) / goals.length)}%
            </span>
          </div>
          <h3 className="font-semibold text-gray-900 mb-1">Avg Progress</h3>
          <p className="text-gray-600 text-sm">Across all goals</p>
        </div>

        <div className="bg-white rounded-xl p-6 shadow-lg border border-gray-100">
          <div className="flex items-center justify-between mb-4">
            <div className="w-12 h-12 bg-amber-100 rounded-lg flex items-center justify-center">
              <AlertTriangle className="w-6 h-6 text-amber-600" />
            </div>
            <span className="text-2xl font-bold text-amber-600">
              {goals.filter(g => g.status === 'at-risk').length}
            </span>
          </div>
          <h3 className="font-semibold text-gray-900 mb-1">At Risk</h3>
          <p className="text-gray-600 text-sm">Need attention</p>
        </div>

        <div className="bg-white rounded-xl p-6 shadow-lg border border-gray-100">
          <div className="flex items-center justify-between mb-4">
            <div className="w-12 h-12 bg-purple-100 rounded-lg flex items-center justify-center">
              <Brain className="w-6 h-6 text-purple-600" />
            </div>
            <span className="text-2xl font-bold text-purple-600">3</span>
          </div>
          <h3 className="font-semibold text-gray-900 mb-1">AI Insights</h3>
          <p className="text-gray-600 text-sm">This week</p>
        </div>
      </div>

      {/* Charts Section */}
      <div className="grid grid-cols-1 lg:grid-cols-2 gap-8">
        {/* Goal Progress Chart */}
        <div className="bg-white rounded-xl p-6 shadow-lg border border-gray-100">
          <h3 className="text-lg font-bold text-gray-900 mb-6">Goal Progress</h3>
          <div className="h-64">
            <ResponsiveContainer width="100%" height="100%">
              <BarChart data={goalProgressData}>
                <CartesianGrid strokeDasharray="3 3" stroke="#f0f0f0" />
                <XAxis 
                  dataKey="name" 
                  tick={{ fontSize: 12, fill: '#6b7280' }}
                  axisLine={false}
                />
                <YAxis 
                  tick={{ fontSize: 12, fill: '#6b7280' }}
                  axisLine={false}
                  domain={[0, 100]}
                />
                <Bar 
                  dataKey="progress" 
                  fill="url(#colorGradient)"
                  radius={[4, 4, 0, 0]}
                />
                <defs>
                  <linearGradient id="colorGradient" x1="0" y1="0" x2="0" y2="1">
                    <stop offset="0%" stopColor="#3b82f6" />
                    <stop offset="100%" stopColor="#8b5cf6" />
                  </linearGradient>
                </defs>
              </BarChart>
            </ResponsiveContainer>
          </div>
        </div>

        {/* Weekly Trend */}
        <div className="bg-white rounded-xl p-6 shadow-lg border border-gray-100">
          <h3 className="text-lg font-bold text-gray-900 mb-6">Weekly Trend</h3>
          <div className="h-64">
            <ResponsiveContainer width="100%" height="100%">
              <LineChart data={weeklyProgress}>
                <CartesianGrid strokeDasharray="3 3" stroke="#f0f0f0" />
                <XAxis 
                  dataKey="week" 
                  tick={{ fontSize: 12, fill: '#6b7280' }}
                  axisLine={false}
                />
                <YAxis 
                  tick={{ fontSize: 12, fill: '#6b7280' }}
                  axisLine={false}
                />
                <Line 
                  type="monotone" 
                  dataKey="progress" 
                  stroke="#3b82f6" 
                  strokeWidth={3}
                  dot={{ fill: '#3b82f6', strokeWidth: 2, r: 4 }}
                />
                <Line 
                  type="monotone" 
                  dataKey="motivation" 
                  stroke="#8b5cf6" 
                  strokeWidth={2}
                  strokeDasharray="5 5"
                  dot={{ fill: '#8b5cf6', strokeWidth: 2, r: 3 }}
                />
              </LineChart>
            </ResponsiveContainer>
          </div>
          <div className="flex items-center justify-center space-x-6 mt-4">
            <div className="flex items-center space-x-2">
              <div className="w-3 h-3 bg-blue-500 rounded-full"></div>
              <span className="text-sm text-gray-600">Progress</span>
            </div>
            <div className="flex items-center space-x-2">
              <div className="w-3 h-0.5 bg-purple-500 rounded-full"></div>
              <span className="text-sm text-gray-600">Motivation</span>
            </div>
          </div>
        </div>
      </div>

      {/* AI Insights */}
      <div className="bg-white rounded-xl p-6 shadow-lg border border-gray-100">
        <div className="flex items-center space-x-3 mb-6">
          <div className="w-10 h-10 bg-gradient-to-r from-blue-500 to-purple-500 rounded-lg flex items-center justify-center">
            <Brain className="w-5 h-5 text-white" />
          </div>
          <h3 className="text-lg font-bold text-gray-900">AI Insights & Interventions</h3>
        </div>
        
        <div className="space-y-4">
          {aiInsights.map((insight, index) => (
            <div key={index} className="p-4 rounded-lg border border-gray-200 hover:border-gray-300 transition-colors">
              <div className="flex items-start justify-between">
                <div className="flex-1">
                  <div className="flex items-center space-x-2 mb-2">
                    <div className={`w-2 h-2 rounded-full ${
                      insight.type === 'warning' ? 'bg-amber-500' :
                      insight.type === 'success' ? 'bg-green-500' : 'bg-blue-500'
                    }`}></div>
                    <h4 className="font-semibold text-gray-900">{insight.title}</h4>
                  </div>
                  <p className="text-gray-600 text-sm mb-3">{insight.message}</p>
                </div>
                <button className={`px-4 py-2 rounded-lg text-sm font-medium transition-colors ${
                  insight.type === 'warning' ? 'bg-amber-100 text-amber-700 hover:bg-amber-200' :
                  insight.type === 'success' ? 'bg-green-100 text-green-700 hover:bg-green-200' :
                  'bg-blue-100 text-blue-700 hover:bg-blue-200'
                }`}>
                  {insight.action}
                </button>
              </div>
            </div>
          ))}
        </div>
      </div>
    </div>
  );
} 